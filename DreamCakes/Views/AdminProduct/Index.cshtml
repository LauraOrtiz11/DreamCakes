@model IEnumerable<DreamCakes.Dtos.Admin.AdminProductDto>

@{
    ViewBag.Title = "Lista de Productos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4 class="text-center mt-4 mb-4 text-uppercase" style="color: var(--purple); font-weight: bold;">
    GESTIÓN DE PRODUCTOS
</h4>

<p class="new-button-container">
    <a href="@Url.Action("Create")" class="primary-button">
        Crear Nuevo Producto
    </a>
</p>

@if (TempData["SuccessMessage"] != null)
{
    <div id="success-alert" class="alert alert-success custom-alert">
        @TempData["SuccessMessage"]
    </div>
}

<div class="table-container">
    <table class="categories-table">
        <thead>
            <tr>
                <th>Imagen</th>
                <th>Nombre</th>
                <th>Categoría</th>
                <th>Precio</th>
                <th>Stock</th>
                <th class="actions-header">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @if (item.Images != null && item.Images.Any())
                        {
                            <img src="@item.Images.First().ImgUrl" alt="@item.ProdName" class="product-img" />
                        }
                        else
                        {
                            <span class="text-muted">Sin imagen</span>
                        }
                    </td>
                    <td>@item.ProdName</td>
                    <td>@item.CategoryName</td>
                    <td>@item.ProdPrice.ToString("C")</td>
                    <td>@item.ProdStock</td>
                    <td class="actions-column">
                        <a href="@Url.Action("Edit", new { id = item.ID_Product })" class="action-button">
                            <img src="~/Content/icons/edit.svg" alt="Editar" class="icon" /> Editar
                        </a>
                        <a href="@Url.Action("Details", new { id = item.ID_Product })" class="action-button">
                            <img src="~/Content/icons/list.svg" alt="Detalles" class="icon" /> Detalles
                        </a>
                        <button onclick="deleteProduct(@item.ID_Product)" class="action-button delete">
                            <img src="~/Content/icons/delete.svg" alt="Eliminar" class="icon" /> Eliminar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    .new-button-container {
        text-align: right;
        margin-bottom: 20px;
        margin-right: 5%;
    }

    .primary-button {
        padding: 10px 20px;
        background-color: var(--purple);
        color: white;
        border-radius: 12px;
        text-decoration: none;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .primary-button:hover {
            background-color: var(--light-purple);
            text-decoration: none;
            color: white;
        }

    .table-container {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .categories-table {
        width: 90%;
        max-width: 1100px;
        border-collapse: collapse;
        background-color: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 30px rgba(72, 52, 112, 0.3);
    }

        .categories-table thead {
            background-color: var(--purple);
            color: white;
        }

        .categories-table th,
        .categories-table td {
            padding: 14px 16px;
            text-align: left;
        }

        .categories-table tbody tr:nth-child(even) {
            background-color: var(--gray);
        }

    .actions-header {
        text-align: center;
    }

    .actions-column {
        display: flex;
        flex-direction: column;
        gap: 10px;
        align-items: center;
    }

    .action-button {
        display: flex;
        align-items: center;
        gap: 8px;
        color: var(--purple);
        text-decoration: none;
        font-weight: 600;
        transition: color 0.3s;
        border: none;
    }

        .action-button:hover {
            color: var(--light-purple);
        }

        .action-button.delete {
            color: var(--wine);
        }

            .action-button.delete:hover {
                color: var(--light-wine);
            }

    .icon {
        width: 18px;
        height: 18px;
    }

    .custom-alert {
        max-width: 600px;
        margin: 20px auto;
        border-radius: 0.5rem;
        text-align: center;
        font-weight: 500;
        transition: opacity 0.5s ease, transform 0.5s ease;
    }

        .custom-alert.fade-out {
            opacity: 0;
            transform: translateY(-10px);
        }

    .product-img {
        width: 90px;
        height: 90px;
        object-fit: cover;
        border-radius: 0.5rem;
    }
</style>

@section Scripts {
    <script>

        setTimeout(function () {
            const alert = document.getElementById("success-alert");
            if (alert) {
                alert.classList.add("fade-out");
                setTimeout(() => alert.remove(), 600);
            }
        }, 3000);
        function deleteProduct(id) {
            if (confirm('¿Está seguro que desea eliminar este producto?')) {
                $.post('@Url.Action("Delete")', { id: id }, function (data) {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.error || 'Error al eliminar el producto');
                    }
                }).fail(function () {
                    alert('Error de conexión con el servidor');
                });
            }
        }
    </script>
}
