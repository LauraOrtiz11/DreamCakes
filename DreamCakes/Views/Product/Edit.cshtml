@model DreamCakes.Dtos.ProductDto
@{
    ViewBag.Title = "Editar Producto";
}

<div class="container mt-4">
    <h2>@ViewBag.Title</h2>
    <hr />

    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            @ViewBag.ErrorMessage
        </div>
    }

    @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ProductId)

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, "Nombre")
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, "Descripción")
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4 })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, "Categoría")
                    @Html.DropDownListFor(model => model.CategoryId,
                        (SelectList)ViewBag.Categories,
                        new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, "Precio")
                    @Html.TextBoxFor(model => model.Price, new
                    {
                        @class = "form-control",
                        type = "number",
                        step = "0.01",
                        min = "0.01"
                    })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Stock, "Stock")
                    @Html.TextBoxFor(model => model.Stock, new
                    {
                        @class = "form-control",
                        type = "number",
                        min = "0"
                    })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-12">
                <h5>Imágenes Actuales</h5>
                <div class="d-flex flex-wrap">
                    @if (Model.Images != null && Model.Images.Any())
                    {
                        foreach (var image in Model.Images.Where(img => img != null))
                        {
                            <div class="mr-3 mb-3 position-relative" style="width: 150px;">
                                <img src="@image.Url" alt="@image.Name"
                                     class="img-thumbnail" style="width: 100%; height: 150px; object-fit: cover;" />
                                <button type="button" class="btn btn-danger btn-sm position-absolute top-0 right-0"
                                        onclick="deleteImage(@Model.ProductId, '@image.Url')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No hay imágenes disponibles para este producto.</p>
                    }
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-12">
                <div class="form-group">
                    <label>Agregar Nuevas Imágenes (Opcional)</label>
                    <input type="file" name="newImages" id="newImages" class="form-control-file" multiple accept="image/*" />
                    <small class="form-text text-muted">Puede agregar hasta 5 imágenes adicionales</small>
                    <div id="newImagesPreview" class="mt-2 d-flex flex-wrap"></div>
                </div>
            </div>
        </div>

        <div class="form-group mt-4">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i> Guardar Cambios
            </button>
            <a href="@Url.Action("Index")" class="btn btn-secondary">
                <i class="fas fa-times"></i> Cancelar
            </a>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function deleteImage(productId, imageUrl) {
            if (confirm('¿Está seguro que desea eliminar esta imagen?')) {
                $.post('@Url.Action("DeleteImage", "Product")', {
                    productId: productId,
                    imageUrl: imageUrl
                }, function(data) {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.error || 'Error al eliminar la imagen');
                    }
                }).fail(function() {
                    alert('Error de conexión con el servidor');
                });
            }
        }

        // Vista previa para nuevas imágenes
        $('#newImages').change(function() {
            $('#newImagesPreview').empty();
            var files = this.files;

            if (files && files.length > 0) {
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    if (file.type.match('image.*')) {
                        var reader = new FileReader();

                        reader.onload = function(e) {
                            $('#newImagesPreview').append(
                                '<div class="mr-2 mb-2" style="width: 100px; height: 100px; overflow: hidden; border: 1px solid #ddd;">' +
                                '<img src="' + e.target.result + '" style="width: 100%; height: 100%; object-fit: cover;" />' +
                                '</div>'
                            );
                        }

                        reader.readAsDataURL(file);
                    }
                }
            }
        });
    </script>
}