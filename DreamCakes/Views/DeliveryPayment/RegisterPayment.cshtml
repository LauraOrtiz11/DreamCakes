@model DreamCakes.Dtos.Delivery.DeliveryPaymentDetailsDto
@{
    var amountPaid = ViewBag.AmountPaid as decimal? ?? 0;
    var remainingAmount = ViewBag.RemainingAmount as decimal? ?? Model.TotalAmount;

    var formattedPaid = amountPaid.ToString("0.00", new System.Globalization.CultureInfo("es-CO"));
    var formattedRemaining = remainingAmount.ToString("0.00", new System.Globalization.CultureInfo("es-CO"));
    var formattedTotal = Model.TotalAmount.ToString("0.00", new System.Globalization.CultureInfo("es-CO"));

    var jsRemainingAmount = remainingAmount.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture);
    var jsTotalAmount = Model.TotalAmount.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture);
}
<style>
    .od-alert {
        margin-bottom: 1rem;
    }

    .od-dl dt {
        font-weight: 500;
    }

    .od-dl dd {
        margin-bottom: 0.5rem;
    }
</style>


<div class="container mt-4">
    <div class="card shadow-sm rounded-lg">
        <div class="pc-card-header">
            <h5 class="mb-0">
                <i class="fas fa-money-bill-wave"></i> Registrar Pago - Pedido #@Model.OrderId
            </h5>
            @if (amountPaid > 0)
            {
                <span class="badge badge-warning pc-payment-badge ml-2">Pago Parcial</span>
            }
        </div>

        <div class="card-body">
           
            @if (TempData["WarningMessage"] != null)
            {
                <div class="alert alert-warning od-alert">
                    <i class="fas fa-exclamation-triangle"></i> @TempData["WarningMessage"]
                </div>
            }

            @using (Html.BeginForm("RegisterPayment", "DeliveryPayment", FormMethod.Post,
                   new { @class = "form-horizontal", role = "form", id = "paymentForm" }))
            {
                @Html.AntiForgeryToken()

                @Html.Hidden("OrderId", Model.OrderId)
                @Html.Hidden("PaymentMethod", 1)

                <div class="row mb-4">
                    <div class="col-md-6 pc-info-section">
                        <h5 class="pc-section-title"><i class="fas fa-user"></i> Información del Cliente</h5>
                        <dl class="row od-dl">
                            <dt class="col-sm-4">Nombre:</dt>
                            <dd class="col-sm-8">@Model.CustomerName</dd>

                            <dt class="col-sm-4">Dirección:</dt>
                            <dd class="col-sm-8">@Model.DeliveryAddress</dd>
                        </dl>
                    </div>

                    <div class="col-md-6">
                        <h5 class="pc-section-title"><i class="fas fa-receipt"></i> Información del Pedido</h5>
                        <dl class="row od-dl">
                            <dt class="col-sm-6">Total Pedido:</dt>
                            <dd class="col-sm-6">@formattedTotal</dd>

                            @if (amountPaid > 0)
                            {
                                <dt class="col-sm-6 pc-paid-label">Monto Ya Pagado:</dt>
                                <dd class="col-sm-6 pc-paid-label">@formattedPaid</dd>

                                <dt class="col-sm-6 pc-remaining-label">Saldo Pendiente:</dt>
                                <dd class="col-sm-6 pc-remaining-label">@formattedRemaining</dd>
                            }
                        </dl>
                    </div>
                </div>

                <div class="form-group">
                    <label for="AmountReceived" class="font-weight-bold text-royal">
                        <i class="fas fa-money-bill-wave"></i> Monto Recibido:
                    </label>
                    <div class="input-group pc-money-input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-royal text-white rounded-start-pill">$</span>
                        </div>
                        <input type="text"
                               class="form-control money-input rounded-pill"
                               id="AmountReceived"
                               name="AmountReceived"
                               required
                               placeholder="Ej: 5000,00"
                               inputmode="decimal"
                               data-val="true"
                               data-val-required="El monto recibido es requerido"
                               data-val-range="El monto debe estar entre 0,01 y @formattedRemaining.Replace('.', ',')"
                               data-val-range-min="0,01"
                               data-val-range-max="@jsRemainingAmount.Replace('.', ',')" />
                    </div>
                    @Html.ValidationMessage("AmountReceived", "", new { @class = "text-danger mt-1" })
                    <small class="form-text text-muted">Ingrese el monto recibido en efectivo</small>
                </div>

                <div class="form-group form-check">
                    <input type="checkbox"
                           class="form-check-input"
                           id="IsFullPayment"
                           name="IsFullPayment"
                           @(remainingAmount == Model.TotalAmount ? "checked" : "") />
                    <label class="form-check-label font-weight-bold text-royal" for="IsFullPayment">
                        Pago completo
                    </label>
                </div>

                <div class="form-group mt-4 d-flex justify-content-between">
                    <button type="submit" class="btn btn-royal btn-sm rounded-pill pc-submit-btn">
                        <i class="fas fa-check-circle"></i> @(amountPaid > 0 ? "Registrar Pago Adicional" : "Confirmar Pago")
                    </button>
                    <a href="@Url.Action("AssignedOrders", "DeliveryOrder")" class="btn btn-outline-secondary btn-sm rounded-pill">
                        <i class="fas fa-times"></i> Cancelar
                    </a>
                </div>
            }
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
    var total = parseFloat('@jsTotalAmount'.replace(',', '.')) || 0;
    var remaining = parseFloat('@jsRemainingAmount'.replace(',', '.')) || total;

    // Manejar cambio en la casilla de pago completo
    $('#IsFullPayment').change(function() {
        if ($(this).is(':checked')) {
            $('#AmountReceived').val(remaining.toFixed(2).trigger('blur');
        }
    });

    // Formatear entrada monetaria
    $('#AmountReceived').on('blur', function() {
        var value = $(this).val().replace(/\./g, '').replace(',', '.');
        var num = parseFloat(value) || 0;
        $(this).val(num.toLocaleString('es-CO', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        }));

        // Actualizar casilla de pago completo
        $('#IsFullPayment').prop('checked', num >= remaining);
    });

    // Validación al enviar el formulario
    $('form').submit(function(e) {
        var inputVal = $('#AmountReceived').val().replace(/\./g, '').replace(',', '.');
        var numericValue = parseFloat(inputVal) || 0;

        if (numericValue <= 0) {
            alert('El monto recibido debe ser mayor a cero');
            e.preventDefault();
            return false;
        }

        if (numericValue > remaining) {
            alert('El monto recibido no puede ser mayor al saldo pendiente');
            e.preventDefault();
            return false;
        }

        // Forzar formato correcto antes de enviar
        $('#AmountReceived').val(numericValue.toFixed(2).replace('.', ','));
        return true;
    });
});
    </script>
}
