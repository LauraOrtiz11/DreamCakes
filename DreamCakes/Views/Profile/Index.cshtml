@model DreamCakes.Dtos.ProfileDto

@{ ViewBag.Title = "Mi Perfil"; }

<div class="profile-container">
    <div class="row">
        <div class="col-md-4">
            <div class="profile-card">
                <div class="profile-card">
                    <img src="@Model.ProfileImage" class="profile-img" alt="Foto de perfil">
                    <h4 class="profile-name">@Model.UserNames @Model.UserSecNames</h4>
                    <p class="profile-role">@Model.RoleName</p>
                    <button class="profile-img-btn">Cambiar foto</button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="profile-info-card">
            <div class="profile-info-header">
                Información Personal
            </div>
            <div class="profile-info-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                }

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.ID_User)
                    @Html.HiddenFor(model => model.ID_Role)
                    @Html.HiddenFor(model => model.ProfileImage)

                    <div class="profile-form-group">
                        <label class="profile-form-label">Nombres</label>
                        
                            @Html.TextBoxFor(model => model.UserNames, new { @class = "profile-form-input" })
                            @Html.ValidationMessageFor(model => model.UserNames, "", new { @class = "text-danger" })
                        
                    </div>

                    <div class="profile-form-group">
                        <label class="profile-form-label">Apellidos</label>
                        
                            @Html.TextBoxFor(model => model.UserSecNames,  new { @class = "profile-form-input" })
                            @Html.ValidationMessageFor(model => model.UserSecNames, "", new { @class = "text-danger" })
                        
                    </div>

                    <div class="profile-form-group">
                        <label class="profile-form-label">Email</label>
                        <div class="profile-form-input">    
                            @Html.TextBoxFor(model => model.Email, new { @class = "profile-form-input" })
                        </div>
                    </div>

                    <div class="profile-form-group">
                        <label class="profile-form-label">Teléfono</label>
                        
                            @Html.TextBoxFor(model => model.PhoneNum, new { @class = "profile-form-input" })
                            @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
                        
                    </div>

                    <div class="profile-form-group">
                        <label class="profile-form-label">Dirección</label>
                        <div class="profile-form-input">
                            @Html.TextBoxFor(model => model.Address, new { @class = "profile-form-input" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="profile-form-actions">
                            <button type="submit" class="btn-wine">Guardar Cambios</button>
                            
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .img-thumbnail {
        object-fit: cover;
    }

    .form-control[readonly] {
        background-color: #f8f9fa;

    }
</style>