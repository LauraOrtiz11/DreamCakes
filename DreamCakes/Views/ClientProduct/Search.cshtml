@model List<DreamCakes.Dtos.Client.ProductSearchResultDto>
@{
    ViewBag.Title = "Buscar Productos";
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h2>Nuestros Productos</h2>

            <!-- Formulario de Búsqueda -->
            @using (Html.BeginForm("Search", "ClientProduct", FormMethod.Get, new { @class = "card p-3 mb-4" }))
            {
                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.FirstOrDefault().ProductName, "Nombre del Producto")
                        @Html.TextBox("ProductName", null, new { @class = "form-control", placeholder = "Buscar..." })
                    </div>

                    <div class="form-group col-md-3">
                        @Html.Label("CategoryID", "Categoría")
                        @Html.DropDownList("CategoryID", ViewBag.Categories as SelectList, "Todas", new { @class = "form-control" })
                    </div>

                    <div class="form-group col-md-2">
                        @Html.LabelFor(m => m.FirstOrDefault().ProductPrice, "Precio Mínimo")
                        @Html.TextBox("MinPrice", null, new { @class = "form-control", type = "number", min = "0" })
                    </div>

                    <div class="form-group col-md-2">
                        @Html.LabelFor(m => m.FirstOrDefault().ProductPrice, "Precio Máximo")
                        @Html.TextBox("MaxPrice", null, new { @class = "form-control", type = "number", min = "0" })
                    </div>

                    <div class="form-group col-md-1 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-3">
                        <div class="form-check">
                            @Html.CheckBox("HasStock", true, new { @class = "form-check-input" })
                            @Html.Label("HasStock", "Solo con stock", new { @class = "form-check-label" })
                        </div>
                    </div>

                    <div class="form-group col-md-3">
                        @Html.Label("SortBy", "Ordenar por")
                        @Html.DropDownList("SortBy", new SelectList(new[]
                        {
                            new { Value = "Rating", Text = "Rating" },
                            new { Value = "Price", Text = "Precio" },
                            new { Value = "Name", Text = "Nombre" }
                        }, "Value", "Text"), new { @class = "form-control" })
                    </div>

                    <div class="form-group col-md-3">
                        @Html.Label("SortDirection", "Dirección")
                        @Html.DropDownList("SortDirection", new SelectList(new[]
                        {
                            new { Value = "DESC", Text = "Descendente" },
                            new { Value = "ASC", Text = "Ascendente" }
                        }, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Resultados -->
    <div class="row">
        @if (Model.Any())
        {
            foreach (var product in Model)
            {
                <div class="col-lg-3 col-md-6 mb-4">
                    <div class="card h-100 product-card">
                        <img src="@product.MainImageUrl" class="card-img-top" alt="@product.ProductName" style="height: 180px; object-fit: cover;">
                        <div class="card-body">
                            <h5 class="card-title">@product.ProductName</h5>
                            <p class="text-muted small">@product.CategoryName</p>
                            <div class="mb-2">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="fas fa-star @(i <= product.ProductRating ? "text-warning" : "text-muted")"></i>
                                }
                                <small>(@product.RatingCount)</small>
                            </div>
                            <h5 class="text-primary">@product.ProductPrice.ToString("C")</h5>
                        </div>
                        <div class="card-footer bg-white">
                            <a href="@Url.Action("Details", "ClientProduct", new { id = product.ProductID })" class="btn btn-outline-primary btn-block">
                                Ver Detalles
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info">
                    No se encontraron productos con los criterios de búsqueda especificados.
                </div>
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        .product-card {
            transition: transform 0.3s, box-shadow 0.3s;
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            }

        .card-title {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
}